syntax = "proto3";

package usuarios;

message Usuario {
  int32 id = 1; // PK (no mostrar en vistas si se desea)
  string nombreUsuario = 2;
  string nombre = 3;
  string apellido = 4;
  string telefono = 5;
  string clave_hash = 6; // hash/encriptado guardado en DB
  string email = 7;
  string rol = 8;
  bool activo = 9;
}

message CreateUserRequest {
  string nombreUsuario = 1;
  string nombre = 2;
  string apellido = 3;
  string telefono = 4;
  string email = 5;
  string rol = 6;
  // NOTA: la clave se genera aleatoria en el servidor, se retorna en la respuesta
}

message UpdateUserRequest {
  int32 id = 1; // id a modificar
  string nombreUsuario = 2;
  string nombre = 3;
  string apellido = 4;
  string telefono = 5;
  string email = 6;
  string rol = 7;
  bool activo = 8;
}

// Baja logica
message BajaUsuarioRequest {
    int32 id = 1;
}

// ---- Respuestas ----

message CreateUserResponse {
  CreateUserRequest usuario = 1;
  string mensaje = 2;
}

message UpdateAndDeleteUserResponse {
  CreateUserRequest usuario = 1;
  string mensaje = 2;
}


// ---- Login ----
message LoginRequest {
  string identificador = 1; // Puede ser nombreUsuario o emailUnico
  string clave = 2;
}

enum LoginResultCode {
  LOGIN_OK = 0;
  LOGIN_USER_NOT_FOUND = 1;
  LOGIN_INVALID_CREDENTIALS = 2;
  LOGIN_INACTIVE_USER = 3;
}

message LoginResponse {
  LoginResultCode result = 1;
  string mensaje = 2; 
  Usuario usuario = 3; 
}

// ---- Servicios ----
service UsuarioService {
  rpc CrearUsuario (CreateUserRequest) returns (CreateUserResponse);
  rpc ModificarUsuario (UpdateUserRequest) returns (UpdateAndDeleteUserResponse);
  rpc BajaUsuario (BajaUsuarioRequest) returns (UpdateAndDeleteUserResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
}


// ******************************************************************
// Evento solidario
// ******************************************************************
